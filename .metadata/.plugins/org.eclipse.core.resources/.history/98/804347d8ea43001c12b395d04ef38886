package com.health.track.services;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;

import com.health.track.dbConnection.DBManager;
import com.health.track.entities.Atividade;
import com.health.track.entities.Usuario;
import com.health.track.entities.dao.UsuarioDAO;
import com.health.track.interfaces.UsuarioInterface;
import com.health.track.mappers.AtividadeMapper;

public class UsuarioService implements UsuarioInterface{
	
	private Connection conexao;
	private AtividadeService as = new AtividadeService();

	@Override
	public UsuarioDAO getUsuario(Integer cpf, String senha) {
		PreparedStatement stmt= null;
		ResultSet rs= null;
		
		try {
			conexao= DBManager.obterConexao();
			stmt= conexao.prepareStatement("SELECT U.CD_USER,"+
			"U.DS_PASSWORD,U.NR_META_K,U.NR_META_T,"+
			"P.T_USER_CD_USER,P.NM_PERSON,P.NR_CPF,"+
			"P.DS_EMAIL,P.NR_HEIGHT FROM T_USER U"+
			" INNER JOIN T_PERSON P ON"+
			" (U.CD_USER = P.T_USER_CD_USER)"+
			" WHERE P.NR_CPF = ?"+
			" AND U.DS_PASSWORD = ?");
			
			stmt.setInt(1, cpf);
			stmt.setString(1, senha);
			
			rs= stmt.executeQuery();
			
			while(rs.next()) {
				Long cdUsuario = rs.getLong("CD_USER");
				String senhaUsuario = rs.getString("DS_PASSWORD");
				Integer metaKcal = rs.getInt("NR_META_K");
				Integer metaTempo = rs.getInt("NR_META_T");
				Long cdUsuarioFK = rs.getLong("T_USER_CD_USER");
				String nomePessoa = rs.getString("NM_PERSON");
				Integer cpfUsuario = rs.getInt("NR_CPF");
				String email = rs.getString("DS_EMAIL");
				Double altura = rs.getDouble("NR_HEIGHT");
				
				Usuario usuario = new Usuario(cdUsuario,senhaUsuario,
						metaKcal,metaTempo,AtividadeMapper(as.getAtividade(cdUsuario)));
				
				Calendar data = Calendar.getInstance();
				
				data.setTimeInMillis(dateAtividade.getTime());

				Atividade atividade = new Atividade(idAtividade,kcal,tempo,descanso,data,idUsuario);
				listaAtividade.add(AtividadeMapper.toDAO(atividade));
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		}finally{
			try{
				stmt.close();
				rs.close();
				conexao.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}
		
		
		return null;
	}

	@Override
	public void setUsuario(UsuarioDAO dao) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void deleteUsuario(Integer cpf, String senha) {
		// TODO Auto-generated method stub
		
	}

}
